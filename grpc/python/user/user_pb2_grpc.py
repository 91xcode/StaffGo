# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import user_pb2 as user__pb2


class UserStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UserIndex = channel.unary_unary(
                '/user.User/UserIndex',
                request_serializer=user__pb2.UserIndexRequest.SerializeToString,
                response_deserializer=user__pb2.UserIndexResponse.FromString,
                )
        self.UserView = channel.unary_unary(
                '/user.User/UserView',
                request_serializer=user__pb2.UserViewRequest.SerializeToString,
                response_deserializer=user__pb2.UserViewResponse.FromString,
                )
        self.UserPost = channel.unary_unary(
                '/user.User/UserPost',
                request_serializer=user__pb2.UserPostRequest.SerializeToString,
                response_deserializer=user__pb2.UserPostResponse.FromString,
                )
        self.UserDelete = channel.unary_unary(
                '/user.User/UserDelete',
                request_serializer=user__pb2.UserDeleteRequest.SerializeToString,
                response_deserializer=user__pb2.UserDeleteResponse.FromString,
                )


class UserServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UserIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserView(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserPost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UserIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.UserIndex,
                    request_deserializer=user__pb2.UserIndexRequest.FromString,
                    response_serializer=user__pb2.UserIndexResponse.SerializeToString,
            ),
            'UserView': grpc.unary_unary_rpc_method_handler(
                    servicer.UserView,
                    request_deserializer=user__pb2.UserViewRequest.FromString,
                    response_serializer=user__pb2.UserViewResponse.SerializeToString,
            ),
            'UserPost': grpc.unary_unary_rpc_method_handler(
                    servicer.UserPost,
                    request_deserializer=user__pb2.UserPostRequest.FromString,
                    response_serializer=user__pb2.UserPostResponse.SerializeToString,
            ),
            'UserDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.UserDelete,
                    request_deserializer=user__pb2.UserDeleteRequest.FromString,
                    response_serializer=user__pb2.UserDeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user.User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UserIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/UserIndex',
            user__pb2.UserIndexRequest.SerializeToString,
            user__pb2.UserIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/UserView',
            user__pb2.UserViewRequest.SerializeToString,
            user__pb2.UserViewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/UserPost',
            user__pb2.UserPostRequest.SerializeToString,
            user__pb2.UserPostResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/UserDelete',
            user__pb2.UserDeleteRequest.SerializeToString,
            user__pb2.UserDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
